import matplotlib.pyplot as plt
import numpy as np
from tkinter import *

def laplace():
    def cal():
        k = float(var1.get())
        ri = float(var2.get())
        ro = float(var3.get())
        t1 = float(var4.get())
        t2 = float(var5.get())
        l = float(var6.get())
        x = float(var7.get())
        A = np.pi * 2*x*l
        r = np.array([[np.log(ri), 1], [np.log(ro), 1]])
        t = np.array([[t1], [t2]])
        c = np.linalg.solve(r, t)
        dTdx = c[0]/x
        qx = -k*A*dTdx
        tx = c[0]*np.log(x) + c[1]
        Tx.delete(0, END)
        Qx.delete(0, END)
        Tx.insert(0,tx)
        Qx.insert(0,qx)
    def graph1():
        k1 = float(var1.get())
        ri1 = float(var2.get())
        ro1 = float(var3.get())
        t11 = float(var4.get())
        t21 = float(var5.get())
        l1 = float(var6.get())
        x1 = float(var7.get())
        A1 = np.pi * 2*l1*x1
        c11 = (t21-t11)/(np.log(ro1)-np.log(ri1))
        c21 = t11 -c11*np.log(ri1)
        dTdx1 = c11/x1
        qx1 = -k1*A1*dTdx1
        tx1 = c11*np.log(x1) + c21
        rad1 = np.arange(ri1, ro1, 0.01)
        temp1 = []
        for i in rad1:
            y = c11*np.log(i) + c21
            temp1.append(y)
        plt.plot(1, 1, 'ro')
        plt.xlabel("Radius(m)")
        plt.ylabel("Temperature(C)")
        plt.show()
    a = Tk()
    a.title("LaPlace")
    var1 = StringVar()
    var2 = StringVar()
    var3 = StringVar()
    var4 = StringVar()
    var5 = StringVar()
    var6 = StringVar()
    var7 = StringVar()
    Label(a, text='LaPlace Equation', padx=55, bg='white', fg='black', font=("arial", 14, "bold")).grid(row=0, column=0)
    Label(a, text='Enter the value of K(W/mC)', padx=1).grid(row=1, column=0)
    K = Entry(a, width=25, textvariable=var1)
    print(K)
    K.grid(row=1, column=1)
    Label(a, text='Enter the inner Radius Ri(m)', padx=25, bg = "white", fg = "black").grid(row=2, column=0)
    Ri = Entry(a, width=25, textvariable=var2)
    Ri.grid(row=2, column=1)
    Label(a, text='Enter the outer Radius Ro(m)', padx=25).grid(row=3, column=0)
    Ro = Entry(a, width=25, textvariable=var3)
    Ro.grid(row=3, column=1)
    Label(a,text='Temperature at inner radius Ti(C)',padx=25).grid(row=4,column=0)
    T1 = Entry(a,width=25,textvariable=var4)
    T1.grid(row=4,column=1)
    Label(a, text='Temperature at outer radius To(C)', padx=25).grid(row=5, column=0)
    T2 = Entry(a, width=25, textvariable=var5)
    T2.grid(row=5, column=1)
    Label(a, text='Enter the length of cylinder L(m)', padx=25).grid(row=6, column=0)
    L = Entry(a, width=25, textvariable=var6)
    L.grid(row=6, column=1)
    Label(a, text='Enter the radius at which you want to find the temperaturem X(m)', padx=25).grid(row=7, column=0)
    X = Entry(a, width=25, textvariable=var7)
    X.grid(row=7, column=1)
    Label(a, text='Temperature at position X', padx=25).grid(row=9, column=0)
    Tx = Entry(a,width=25)
    Tx.grid(row=9,column=1)
    Label(a, text='Rate of Heat Transfer at position X', padx=25).grid(row=10, column=0)
    Qx = Entry(a, width=25)
    Qx.grid(row=10, column=1)
    print("You Chose LaPlace")
    Button(a,text="Calculate",command=cal, bg='yellow', fg='red', font=("arial", 10, "bold")).grid(row=8,column=1)
    Button(a, text="Plot Graph", command=graph1, bg='yellow', fg='red', font=("arial", 10, "bold")).grid(row=11,column=1)
    a.mainloop()

def poisson():
    def cal():
        k = float(var1.get())
        ri = float(var2.get())
        ro = float(var3.get())
        t1 = float(var4.get())
        t2 = float(var5.get())
        l = float(var6.get())
        g = float(var7.get())
        x = float(var8.get())
        A = np.pi*2*l*x
        r = np.array([[np.log(ri), 1], [np.log(ro), 1]])
        t = np.array([[t1+((g*ri*ri)/(4*k))], [t2+((g*ro*ro)/(4*k))]])
        c = np.linalg.solve(r, t)
        dTdx = -((g*x)/(2*k))+(c[0]/x)
        qx = -k*A*dTdx
        tx = (-(g*x*x)/(4*k))+c[0]*np.log(x)+c[1]
        Tx.delete(0, END)
        Qx.delete(0, END)
        Tx.insert(0,tx)
        Qx.insert(0,qx)
    def graph2():
        k2 = float(var1.get())
        ri2 = float(var2.get())
        ro2 = float(var3.get())
        t12 = float(var4.get())
        t22 = float(var5.get())
        g2 = float(var6.get())
        l2 = float(var7.get())
        x2 = float(var8.get())
        A2 = np.pi * 2*l2*x2
        r2 = np.array([[np.log(ri2), 1], [np.log(ro2), 1]])
        t2 = np.array([[t12 + ((g2 * ri2 * ri2) / (4 * k2))], [t22 + ((g2 * ro2 * ro2) / (4 * k2))]])
        c2 = np.linalg.solve(r2, t2)
        dTdx2 = -((g2 * x2) / (2 * k2)) + (c2[0] / x2)
        qx2 = -k2 * A2 * dTdx2
        tx2 = -((g2 * x2 * x2) / (4 * k2)) + c2[0] * np.log(x2) + c2[1]
        rad2 = np.arange(ri2, ro2, 0.01)
        temp2 = []
        for i in rad2:
            y = -((g2 * i * i) / (4 * k2)) + c2[0] * np.log(i) + c2[1]
            temp2.append(y)
        plt.plot(rad2, temp2)
        plt.xlabel("Radius(m)")
        plt.ylabel("Temperature(C)")
        plt.show()
    a = Tk()
    a.title("Poisson")
    var1 = StringVar()
    var2 = StringVar()
    var3 = StringVar()
    var4 = StringVar()
    var5 = StringVar()
    var6 = StringVar()
    var7 = StringVar()
    var8 = StringVar()
    Label(a, text='Poisson Equation', padx=55, bg='white',fg='black', font=("arial", 14, "bold")).grid(row=0, column=0)
    Label(a, text='Enter the value of K(W/mC)', padx=25).grid(row=1, column=0)
    K = Entry(a, width=25, textvariable=var1)
    K.grid(row=1, column=1)
    Label(a, text='Enter the inner Radius Ri(m)', padx=25).grid(row=2, column=0)
    Ri = Entry(a, width=25, textvariable=var2)
    Ri.grid(row=2, column=1)
    Label(a, text='Enter the outer Radius Ro(m)', padx=25).grid(row=3, column=0)
    Ro = Entry(a, width=25, textvariable=var3)
    Ro.grid(row=3, column=1)
    Label(a,text='Temperature at inner radius Ti(C)',padx=25).grid(row=4,column=0)
    T1 = Entry(a,width=25,textvariable=var4)
    T1.grid(row=4,column=1)
    Label(a, text='Temperature at outer radius To(C)', padx=25).grid(row=5, column=0)
    T2 = Entry(a, width=25, textvariable=var5)
    T2.grid(row=5, column=1)
    Label(a, text='Enter the length of the cylinder L(m)', padx=25).grid(row=6, column=0)
    L = Entry(a, width=25, textvariable=var6)
    L.grid(row=6, column=1)
    Label(a, text='Enter the value of the rate of heat generation g(W/m^3)', padx=25).grid(row=7, column=0)
    G = Entry(a, width=25, textvariable=var7)
    G.grid(row=7, column=1)
    Label(a, text='Enter the radius at which you want to find the temperature', padx=25).grid(row=8, column=0)
    X = Entry(a, width=25, textvariable=var8)
    X.grid(row=8, column=1)
    Label(a, text='Temperature at position X', padx=25).grid(row=10, column=0)
    Tx = Entry(a,width=25)
    Tx.grid(row=10,column=1)
    Label(a, text='Rate of Heat Transfer at position X', padx=25).grid(row=11, column=0)
    Qx = Entry(a, width=25)
    Qx.grid(row=11, column=1)
    print("You Chose Poisson")
    Button(a,text="Calculate",command=cal, bg='yellow', fg='red', font=("arial", 10, "bold")).grid(row=9,column=1)
    Button(a, text=" Plot graph", command=graph2, bg='yellow', fg='red', font=("arial", 10, "bold")).grid(row=12, column=1)
    a.mainloop()

def diffusion():
    def cal():
        k = float(var1.get())
        ri = float(var2.get())
        ro = float(var3.get())
        t1 = float(var4.get())
        t2 = float(var5.get())
        g = float(var6.get())
        dt = float(var7.get())
        l = float(var8.get())
        x = float(var9.get())
        A = 2*np.pi*x*l
        r = np.array([[np.log(ri), 1], [np.log(ro), 1]])
        t = np.array([[t1-((ri*ri*dt)/(4*g))], [t2-((ro*ro*dt)/(4*g))]])
        c = np.linalg.solve(r, t)
        dTdx = ((x*dt)/(2*g))+(c[0]/x)
        qx = -k*A*dTdx
        tx = ((dt*x*x)/(4*g))+c[0]*np.log(x)+c[1]
        Tx.delete(0, END)
        Qx.delete(0, END)
        Tx.insert(0,tx)
        Qx.insert(0,qx)
    def graph3():
        k3 = float(var1.get())
        ri3 = float(var2.get())
        ro3 = float(var3.get())
        t13 = float(var4.get())
        t23 = float(var5.get())
        g3 = float(var6.get())
        dt3 = float(var7.get())
        l3 = float(var8.get())
        x3 = float(var9.get())
        A3 = np.pi * 2 * l3 * x3
        r3 = np.array([[np.log(ri3), 1], [np.log(ro3), 1]])
        t3 = np.array([[t13-((ri3*ri3*dt3)/(4*g3))], [t23-((ro3*ro3*dt3)/(4*g3))]])
        c3 = np.linalg.solve(r3, t3)
        dTdx3 = ((x3*dt3)/(2*g3))+(c3[0]/x3)
        qx3 = -k3*A3*dTdx3
        tx3 = ((dt3*x3*x3)/(4*g3))+c3[0]*np.log(x3)+c3[1]
        rad3 = np.arange(ri3, ro3, 0.01)
        temp3 = []
        for i in rad3:
            y = ((dt3*i*i)/(4*g3))+c3[0]*np.log(i)+c3[1]
            temp3.append(y)
        plt.plot(rad3, temp3)
        plt.xlabel("Radius(m)")
        plt.ylabel("Temperature(C)")
        plt.show()
    a = Tk()
    a.title("Diffusion")
    var1 = StringVar()
    var2 = StringVar()
    var3 = StringVar()
    var4 = StringVar()
    var5 = StringVar()
    var6 = StringVar()
    var7 = StringVar()
    var8 = StringVar()
    var9 = StringVar()
    Label(a, text='Diffusion Equation', padx=50, bg='white',fg='black', font=("arial",14,"bold")).grid(row=0,column=0)
    Label(a, text='Enter the value of K(W/mC)', padx=25).grid(row=1, column=0)
    K = Entry(a, width=25, textvariable=var1)
    K.grid(row=1, column=1)
    Label(a, text='Enter the inner Radius Ri(m)', padx=25).grid(row=2, column=0)
    Ri = Entry(a, width=25, textvariable=var2)
    Ri.grid(row=2, column=1)
    Label(a, text='Enter the outer Radius Ro(m)', padx=25).grid(row=3, column=0)
    Ro = Entry(a, width=25, textvariable=var3)
    Ro.grid(row=3, column=1)
    Label(a,text='Temperature at inner radius Ti(C)',padx=25).grid(row=4,column=0)
    T1 = Entry(a,width=25,textvariable=var4)
    T1.grid(row=4,column=1)
    Label(a, text='Temperature at outer radius To(C)', padx=25).grid(row=5, column=0)
    T2 = Entry(a, width=25, textvariable=var5)
    T2.grid(row=5, column=1)
    Label(a, text='Enter the value of the thermal diffusivity of the material', padx=25).grid(row=6, column=0)
    G = Entry(a, width=25, textvariable=var6)
    G.grid(row=6, column=1)
    Label(a, text='Enter the value of dT/dt', padx=25).grid(row=7, column=0)
    dT = Entry(a, width=25, textvariable=var7)
    dT.grid(row=7, column=1)
    Label(a, text='Enter the length of the cylinder L(m)', padx=25).grid(row=8, column=0)
    L = Entry(a, width=25, textvariable=var8)
    L.grid(row=8, column=1)
    Label(a, text='Enter the radius at which you want to find the temperature x(m)', padx=25).grid(row=9, column=0)
    X = Entry(a, width=25, textvariable=var9)
    X.grid(row=9, column=1)
    Label(a, text='Temperature at position X', padx=25).grid(row=11, column=0)
    Tx = Entry(a,width=25)
    Tx.grid(row=11,column=1)
    Label(a, text='Rate of Heat Transfer at position X', padx=25).grid(row=12, column=0)
    Qx = Entry(a, width=25)
    Qx.grid(row=12, column=1)
    print("You Chose Diffusion")
    Button(a,text="Calculate",command=cal, bg='yellow', fg='red', font=("arial", 10, "bold")).grid(row=10,column=1)
    Button(a, text=" Plot graph", command=graph3, bg='yellow', fg='red', font=("arial", 10, "bold")).grid(row=13,column=1)
    a.mainloop()


while True:
    print("1.LaPlace    2.Poisson    3.Diffusion    4.Quit")
    n = int(input("Enter an option : "))
    if(n==1):
        laplace()
    elif(n==2):
        poisson()
    elif(n==3):
        diffusion()
    else:
        break
